@import (inline) "node_modules/normalize.css/normalize.css";

////////////////////////////////////
//-------------------------------//
//------Vendor Dependencies------//
//-------------------------------//
///////////////////////////////////

@import (reference) "../../gestalt";

.css3 {
	&_animation {
		.animation(nameAnimation 2s linear alternate);

		&-delay { .animation-delay(2, 200); }

		&-direction { .animation-direction(reverse, alternate); }

		&-duration { .animation-duration(2000); }

		&-fill-mode { .animation-fill-mode(forwards); }

		&-iteration-count { .animation-iteration-count(3); }

		&-name { .animation-name(animation-1, animation-2); }

		&-play-state { .animation-play-state(paused); }

		&-timing-function { .animation-timing-function(cubic-bezier(0.1, 0.7, 1.0, 0.1)); }
	}
	&_appearance { .appearance(); }

	&_backface-visibility { .backface-visibility(hidden); }
	
	&_background {

		&-clip { .background-clip(padding-box); }

		&-image { .background-image(linear-gradient(to bottom, #fb83fa 0%,#e93cec 100%)); }

		&-origin { .background-origin(content-box); }

		&-size { .background-size(cover, 100%); }

	}
	&_border-image { .border-image(url(border.png) 61 45 62 54 repeat); }
	
	&_calc { .calc(width, ~'100% - 33px'); }
	
	&_column { 
		&-count { .column-count(3); }

		&-gap { .column-gap(30); }
		
		&-rule { .column-rule(5 outset #ff00ff); }
		
		&-width { .column-width(100px); }
		
		&s { .columns(100 3); }
	}
	&_filter { .filter(grayscale(0.5) blur(10px)); }
	&_flex { 
		.flex(1 3 100px);
		&-basis { .flex-basis(100); }
		&-direction { .flex-direction(row); }
		&-grow { .flex-grow(2); }
		&-shrink { .flex-shrink(2); }
		&-wrap { .flex-wrap(wrap-reverse); }
	}

	&_font-face { .font-face(Hipster, ~'../fonts/hipster', bold, italic); }

	&_hyphens { .hyphens(none); }
	&_keyframes { .keyframes(~'animationName, 0%{ transform: scale(1.5); color: blue; } 100%{ transform: scale(2); color: red }'); }
	&_perspective { .perspective(1000); }
	&_placeholder { .placeholder(#666666); }
	&_selection { .selection(~'color: blue; background: red'); }
	&_transform { 
		.transform(scale(.5) translate(10, 20));
		&-origin { .transform-origin(50 50); }
		&-style { .transform-style(preserve-3d); }
	}
	&_transition { .transition(box-shadow 0.2s linear, color .4s .2s ease); }
	&_user-selection { .user-select(none); }
}






















